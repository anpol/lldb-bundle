#!/usr/bin/env bash
#
# This script could be automatically loaded by `direnv` <https://direnv.net>
# when you `cd` to the current directory or its subdirectories.  In addition,
# `direnv` can unload the environment when you `cd` out.
#
# If you don't have `direnv` for the moment, you can still load this script
# directly into your interactive shell:
#
#   source ./.envrc
#
# The purpose of this script is to create a local environment suitable for
# developing LLDB scripts.  In particular, here we need to detect a correct
# Python interpreter, then use it to create a virtual environment for
# installing and testing our packages.

# Returns the path to a Python interpreter used by LLDB.
lldb_python_interpreter() {
  if [[ "$OSTYPE" == darwin* ]]; then
    xcrun --find python3
  else
    echo "$(lldb --no-lldbinit --batch --source-quietly --one-line \
            'script import sys; print(sys.prefix)' | tail -1)/bin/python3"
  fi
}

# Returns the path to a directory of the `lldb` Python module, normally used by
# a Python interpreter to `import lldb`.
lldb_python_module_dir() {
  if [[ "$OSTYPE" == darwin* ]]; then
    xcrun lldb --python-path
  else
    lldb --python-path
  fi
}

# Returns a Python installation path corresponding to a *path name*, see
# <https://docs.python.org/3/library/sysconfig.html#installation-paths>.
python_sysconfig_get_path() {
  python3 -c "import sysconfig; print(sysconfig.get_path('$1'))"
}

main() {
  local venv_dir
  venv_dir="$(dirname "${BASH_SOURCE[0]}")/venv"

  # Create a virtual environment unless it already exists.
  if [[ ! -d "$venv_dir" ]]; then
    "$(lldb_python_interpreter)" -m venv --system-site-packages "$venv_dir"
  fi

  # Activate the virtual environment.
  # Suppress direnv message "PS1 cannot be exported" for venv prompt.
  # Suppress shellcheck message "Can't follow non-constant source".
  # shellcheck source=/dev/null
  VIRTUAL_ENV_DISABLE_PROMPT="$DIRENV_IN_ENVRC" source "$venv_dir/bin/activate"

  # Register `lldb` python module directory within the virtual environment.
  local lldb_pth
  lldb_pth="$(python_sysconfig_get_path 'platlib')/lldb.pth"
  [[ -e "$lldb_pth" ]] || lldb_python_module_dir >"$lldb_pth"

  # Suppress pip upgrade warning.
  export PIP_DISABLE_PIP_VERSION_CHECK=1
}

set -e
main "$@"
